USE mathew_steel;

-- 1. How many transactions were completed during each marketing campaign?
SELECT m.campaign_name, COUNT(t.transaction_id) AS num_transactions
FROM marketing_campaigns m JOIN transactions t
ON m.product_id = t.product_id
GROUP BY m.campaign_id ORDER BY num_transactions DESC;

-- 2. Which product had the highest sales quantity?
SELECT s.product_name, SUM(t.quantity) AS sales_quantity
FROM sustainable_clothing s JOIN transactions t 
ON s.product_id = t.product_id
GROUP BY s.product_name ORDER BY sales_quantity DESC LIMIT 1;

-- 3. What is the total revenue generated from each marketing campaign?
SELECT m.campaign_name, ROUND(SUM(t.quantity*s.price), 2) AS total_revenue
FROM marketing_campaigns m JOIN transactions t
ON m.product_id = t.product_id 
JOIN sustainable_clothing s 
ON s.product_id = t.product_id
GROUP BY m.campaign_name ORDER BY total_revenue DESC;

-- 4. What is the top-selling product category based on the total revenue generated?
SELECT s.category, ROUND(SUM(s.price*t.quantity), 2) AS total_revenue
FROM sustainable_clothing s JOIN transactions t 
ON s.product_id = t.product_id
GROUP BY s.category ORDER BY total_revenue DESC LIMIT 1;

-- 5. Which products had a higher quantity sold compared to the average quantity sold?
WITH cte1 AS (
SELECT s.product_name, SUM(t.quantity) AS sales_quantity, AVG(t.quantity) AS avg_quantity
FROM sustainable_clothing s JOIN transactions t 
ON s.product_id = t.product_id
GROUP BY s.product_name 
HAVING sales_quantity > avg_quantity
ORDER BY sales_quantity DESC)
SELECT product_name, sales_quantity FROM cte1;

-- 6. What is the average revenue generated per day during the marketing campaigns?
WITH revenue_table AS (
SELECT m.campaign_name, ROUND(SUM(t.quantity*s.price), 2) AS total_revenue
FROM marketing_campaigns m JOIN transactions t
ON m.product_id = t.product_id 
JOIN sustainable_clothing s 
ON s.product_id = t.product_id
GROUP BY m.campaign_name
),
day_table AS (
SELECT campaign_name, (end_date - start_date) AS num_days 
FROM marketing_campaigns
)
SELECT r.campaign_name, ROUND((r.total_revenue/d.num_days), 2) AS avg_revenue_per_day
FROM revenue_table r JOIN day_table d 
ON r.campaign_name = d.campaign_name 
ORDER BY avg_revenue_per_day DESC;

-- 7. What is the percentage contribution of each product to the total revenue?
WITH cte1 AS (
SELECT s.product_name, ROUND(SUM(s.price*t.quantity), 2) AS total_revenue
FROM sustainable_clothing s JOIN transactions t 
ON s.product_id = t.product_id
GROUP BY s.product_name)
SELECT product_name, ROUND(total_revenue*100/(SUM(total_revenue) OVER()), 2)  AS pct_revenue
FROM cte1 ORDER BY pct_revenue DESC;

-- 8. Compare the average quantity sold during marketing campaigns to outside the marketing campaigns
WITH cte1 AS (
SELECT SUM(t.quantity) AS out_campaign_quantity
FROM transactions t LEFT JOIN marketing_campaigns m
ON t.product_id = m.product_id
WHERE m.product_id IS NULL),
cte2 AS (
SELECT SUM(t.quantity) AS in_campaign_quantity
FROM transactions t JOIN marketing_campaigns m
ON t.product_id = m.product_id
)
SELECT out_campaign_quantity, in_campaign_quantity
FROM cte1 JOIN cte2;

-- 9. Compare the revenue generated by products inside the marketing campaigns to outside the campaigns
WITH cte1 AS (
SELECT ROUND(SUM(t.quantity*s.price), 2) AS out_campaign_revenue
FROM transactions t LEFT JOIN marketing_campaigns m
ON m.product_id = t.product_id 
JOIN sustainable_clothing s 
ON s.product_id = t.product_id
WHERE m.product_id IS NULL
),
cte2 AS (
SELECT ROUND(SUM(t.quantity*s.price), 2) AS in_campaign_revenue
FROM transactions t JOIN marketing_campaigns m
ON m.product_id = t.product_id 
JOIN sustainable_clothing s 
ON s.product_id = t.product_id
)
SELECT out_campaign_revenue, in_campaign_revenue
FROM cte1 JOIN cte2;

-- 10. Rank the products by their average daily quantity sold
SELECT s.product_name, ROUND(AVG(t.quantity), 2) AS avg_daily_quantity,
DENSE_RANK() OVER (ORDER BY AVG(t.quantity) DESC) AS rnk
FROM sustainable_clothing s JOIN transactions t
ON s.product_id = t.product_id
GROUP BY s.product_name;


